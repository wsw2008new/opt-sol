<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.opt.sol.dao.mapper.interfaces.ApiCallCaseReqParamMapper" >
  <resultMap id="BaseResultMap" type="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParam" >
    <id column="req_id" property="reqId" jdbcType="VARCHAR" />
    <result column="param_name" property="paramName" jdbcType="VARCHAR" />
    <result column="case_id" property="caseId" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="java_type" property="javaType" jdbcType="VARCHAR" />
    <result column="interface_name" property="interfaceName" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="json" property="json" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    req_id, param_name, case_id, sort, java_type, interface_name, method, json
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParamCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from api_call_case_req_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from api_call_case_req_param
    where req_id = #{reqId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from api_call_case_req_param
    where req_id = #{reqId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParamCriteria" >
    delete from api_call_case_req_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParam" >
    insert into api_call_case_req_param (req_id, param_name, case_id, 
      sort, java_type, interface_name, 
      method, json)
    values (#{reqId,jdbcType=VARCHAR}, #{paramName,jdbcType=VARCHAR}, #{caseId,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{javaType,jdbcType=VARCHAR}, #{interfaceName,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{json,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParam" >
    insert into api_call_case_req_param
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reqId != null" >
        req_id,
      </if>
      <if test="paramName != null" >
        param_name,
      </if>
      <if test="caseId != null" >
        case_id,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="javaType != null" >
        java_type,
      </if>
      <if test="interfaceName != null" >
        interface_name,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="json != null" >
        json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reqId != null" >
        #{reqId,jdbcType=VARCHAR},
      </if>
      <if test="paramName != null" >
        #{paramName,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="javaType != null" >
        #{javaType,jdbcType=VARCHAR},
      </if>
      <if test="interfaceName != null" >
        #{interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="json != null" >
        #{json,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParamCriteria" resultType="java.lang.Integer" >
    select count(*) from api_call_case_req_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_call_case_req_param
    <set >
      <if test="record.reqId != null" >
        req_id = #{record.reqId,jdbcType=VARCHAR},
      </if>
      <if test="record.paramName != null" >
        param_name = #{record.paramName,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null" >
        case_id = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.javaType != null" >
        java_type = #{record.javaType,jdbcType=VARCHAR},
      </if>
      <if test="record.interfaceName != null" >
        interface_name = #{record.interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.json != null" >
        json = #{record.json,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_call_case_req_param
    set req_id = #{record.reqId,jdbcType=VARCHAR},
      param_name = #{record.paramName,jdbcType=VARCHAR},
      case_id = #{record.caseId,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      java_type = #{record.javaType,jdbcType=VARCHAR},
      interface_name = #{record.interfaceName,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      json = #{record.json,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParam" >
    update api_call_case_req_param
    <set >
      <if test="paramName != null" >
        param_name = #{paramName,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null" >
        case_id = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="javaType != null" >
        java_type = #{javaType,jdbcType=VARCHAR},
      </if>
      <if test="interfaceName != null" >
        interface_name = #{interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="json != null" >
        json = #{json,jdbcType=VARCHAR},
      </if>
    </set>
    where req_id = #{reqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.opt.sol.dao.mapper.bo.ApiCallCaseReqParam" >
    update api_call_case_req_param
    set param_name = #{paramName,jdbcType=VARCHAR},
      case_id = #{caseId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      java_type = #{javaType,jdbcType=VARCHAR},
      interface_name = #{interfaceName,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      json = #{json,jdbcType=VARCHAR}
    where req_id = #{reqId,jdbcType=VARCHAR}
  </update>
</mapper>